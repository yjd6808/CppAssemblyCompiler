   1              		.file	"main.cpp"
   2              	# GNU C++14 (GCC) version 8.3.1 20191121 (Red Hat 8.3.1-5) (x86_64-redhat-linux)
   3              	#	compiled by GNU C version 8.3.1 20191121 (Red Hat 8.3.1-5), GMP version 6.1.2, MPFR version 3.1.6
   4              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   5              	# options passed:  -D_GNU_SOURCE main.cpp -mtune=generic -march=x86-64
   6              	# -auxbase-strip main.s -g -O2 -fverbose-asm
   7              	# options enabled:  -faggressive-loop-optimizations -falign-labels
   8              	# -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-reg
   9              	# -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
  10              	# -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
  11              	# -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
  12              	# -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcode-hoisting
  13              	# -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  14              	# -fcrossjumping -fcse-follow-jumps -fdefer-pop
  15              	# -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  16              	# -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  17              	# -fexceptions -fexpensive-optimizations -fforward-propagate
  18              	# -ffp-int-builtin-inexact -ffunction-cse -fgcse -fgcse-lm -fgnu-runtime
  19              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  20              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  21              	# -finline-atomics -finline-functions-called-once -finline-small-functions
  22              	# -fipa-bit-cp -fipa-cp -fipa-icf -fipa-icf-functions -fipa-icf-variables
  23              	# -fipa-profile -fipa-pure-const -fipa-ra -fipa-reference -fipa-sra
  24              	# -fipa-vrp -fira-hoist-pressure -fira-share-save-slots
  25              	# -fira-share-spill-slots -fisolate-erroneous-paths-dereference -fivopts
  26              	# -fkeep-static-consts -fleading-underscore -flifetime-dse -flra-remat
  27              	# -flto-odr-type-merging -fmath-errno -fmerge-constants
  28              	# -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  29              	# -foptimize-sibling-calls -foptimize-strlen -fpartial-inlining -fpeephole
  30              	# -fpeephole2 -fplt -fprefetch-loop-arrays -free -freg-struct-return
  31              	# -freorder-blocks -freorder-blocks-and-partition -freorder-functions
  32              	# -frerun-cse-after-loop -fsched-critical-path-heuristic
  33              	# -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  34              	# -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
  35              	# -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-fusion
  36              	# -fschedule-insns2 -fsemantic-interposition -fshow-column -fshrink-wrap
  37              	# -fshrink-wrap-separate -fsigned-zeros -fsplit-ivs-in-unroller
  38              	# -fsplit-wide-types -fssa-backprop -fssa-phiopt -fstdarg-opt
  39              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  40              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftrapping-math
  41              	# -ftree-bit-ccp -ftree-builtin-call-dce -ftree-ccp -ftree-ch
  42              	# -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim -ftree-dce
  43              	# -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  44              	# -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  45              	# -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
  46              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr
  47              	# -ftree-sra -ftree-switch-conversion -ftree-tail-merge -ftree-ter
  48              	# -ftree-vrp -funit-at-a-time -funwind-tables -fvar-tracking
  49              	# -fvar-tracking-assignments -fverbose-asm -fzero-initialized-in-bss
  50              	# -m128bit-long-double -m64 -m80387 -malign-stringops
  51              	# -mavx256-split-unaligned-load -mavx256-split-unaligned-store
  52              	# -mfancy-math-387 -mfp-ret-in-387 -mfxsr -mglibc -mieee-fp
  53              	# -mlong-double-80 -mmmx -mno-sse4 -mpush-args -mred-zone -msse -msse2
  54              	# -mstv -mtls-direct-seg-refs -mvzeroupper
  55              	
  56              		.text
  57              	.Ltext0:
  58              		.section	.rodata.str1.1,"aMS",@progbits,1
  59              	.LC0:
  60 0000 78202A20 		.string	"x * x + 2 * x + 3 : %d\n"
  60      78202B20 
  60      32202A20 
  60      78202B20 
  60      33203A20 
  61              	.LC1:
  62 0018 63686563 		.string	"check 5 : %d\n"
  62      6B203520 
  62      3A202564 
  62      0A00
  63              	.LC2:
  64 0026 63686563 		.string	"check 0 : %d\n"
  64      6B203020 
  64      3A202564 
  64      0A00
  65              	.LC3:
  66 0034 63686563 		.string	"check -1 : %d\n"
  66      6B202D31 
  66      203A2025 
  66      640A00
  67              	.LC4:
  68 0043 66616374 		.string	"fact 5 : %d\n"
  68      2035203A 
  68      2025640A 
  68      00
  69              	.LC5:
  70 0050 66616374 		.string	"fact 10 : %d\n"
  70      20313020 
  70      3A202564 
  70      0A00
  71              	.LC6:
  72 005e 6F6E6573 		.string	"ones 5 : %d\n"
  72      2035203A 
  72      2025640A 
  72      00
  73              	.LC7:
  74 006b 6F6E6573 		.string	"ones -1 : %d\n"
  74      202D3120 
  74      3A202564 
  74      0A00
  75              	.LC8:
  76 0079 6F6E6573 		.string	"ones 8 : %d\n"
  76      2038203A 
  76      2025640A 
  76      00
  77              	.LC9:
  78 0086 6F6E6573 		.string	"ones 12 : %d\n"
  78      20313220 
  78      3A202564 
  78      0A00
  79              	.LC10:
  80 0094 6F6E6573 		.string	"ones 14 : %d\n"
  80      20313420 
  80      3A202564 
  80      0A00
  81              	.LC11:
  82 00a2 6F6E6573 		.string	"ones 15 : %d\n"
  82      20313520 
  82      3A202564 
  82      0A00
  83              	.LC12:
  84 00b0 69734F64 		.string	"isOdd 1 : %d\n"
  84      64203120 
  84      3A202564 
  84      0A00
  85              	.LC13:
  86 00be 69734F64 		.string	"isOdd 2 : %d\n"
  86      64203220 
  86      3A202564 
  86      0A00
  87              	.LC14:
  88 00cc 69734F64 		.string	"isOdd 3 : %d\n"
  88      64203320 
  88      3A202564 
  88      0A00
  89              		.section	.text.startup,"ax",@progbits
  90              		.p2align 4,,15
  91              		.globl	main
  93              	main:
  94              	.LFB1700:
  95              		.file 1 "main.cpp"
   1:main.cpp      **** #include <iostream>
   2:main.cpp      **** #include <stdint.h>
   3:main.cpp      **** #include <bitset>
   4:main.cpp      **** #include <unistd.h>
   5:main.cpp      **** 
   6:main.cpp      **** // 118p. 연습문제 - 8
   7:main.cpp      **** // 다음 C함수를 어셈블리어로 변경하라
   8:main.cpp      **** 
   9:main.cpp      **** 
  10:main.cpp      **** // 1) 2차 함수
  11:main.cpp      **** // int f(int x)
  12:main.cpp      **** // {
  13:main.cpp      **** //     return x * x + 2 * x + 3;
  14:main.cpp      **** // }
  15:main.cpp      **** 
  16:main.cpp      **** // 2) 조건문
  17:main.cpp      **** // int check(int input)
  18:main.cpp      **** // {
  19:main.cpp      **** //     if (input < 0)
  20:main.cpp      **** //         return -input;
  21:main.cpp      **** //     else if (input == 0)
  22:main.cpp      **** //         return 0;
  23:main.cpp      **** //     else
  24:main.cpp      **** //         return input * input;
  25:main.cpp      **** // }
  26:main.cpp      **** 
  27:main.cpp      **** // 3) 반복문
  28:main.cpp      **** // int fact(int n)
  29:main.cpp      **** // {
  30:main.cpp      **** //     int i, 
  31:main.cpp      **** //     int f = n;
  32:main.cpp      **** 
  33:main.cpp      **** //     for (i = n - 1; i > 0; i--)
  34:main.cpp      **** //         f = f * i;
  35:main.cpp      **** //     return f;
  36:main.cpp      **** // }
  37:main.cpp      **** 
  38:main.cpp      **** // 4) 1의 개수 구하기
  39:main.cpp      **** // int ones(int n)
  40:main.cpp      **** // {
  41:main.cpp      **** //     return n의 비트중 1의 갯수 반환
  42:main.cpp      **** // }
  43:main.cpp      **** 
  44:main.cpp      **** 
  45:main.cpp      **** // 5) 홀수와 짝수
  46:main.cpp      **** // int isOdd(int n)
  47:main.cpp      **** // {
  48:main.cpp      **** //     return 홀수이면 1 짝수이면 0 반환
  49:main.cpp      **** //}
  50:main.cpp      **** 
  51:main.cpp      **** 
  52:main.cpp      **** extern int f(int x) asm("f");
  53:main.cpp      **** extern int check(int input) asm("check");
  54:main.cpp      **** extern int fact(int n) asm("fact");
  55:main.cpp      **** extern int ones(int n) asm("ones");
  56:main.cpp      **** extern int isOdd(int n) asm("isOdd");
  57:main.cpp      **** 
  58:main.cpp      **** int main()
  59:main.cpp      **** {
  96              		.loc 1 59 1 view -0
  97              		.cfi_startproc
  60:main.cpp      ****     printf("x * x + 2 * x + 3 : %d\n", f(5));
  98              		.loc 1 60 5 view .LVU1
  99              	# main.cpp:59: {
  59:main.cpp      ****     printf("x * x + 2 * x + 3 : %d\n", f(5));
 100              		.loc 1 59 1 is_stmt 0 view .LVU2
 101 0000 4883EC08 		subq	$8, %rsp	#,
 102              		.cfi_def_cfa_offset 16
 103              	# main.cpp:60:     printf("x * x + 2 * x + 3 : %d\n", f(5));
 104              		.loc 1 60 11 view .LVU3
 105 0004 BF050000 		movl	$5, %edi	#,
 105      00
 106 0009 E8000000 		call	f	#
 106      00
 107              	.LVL0:
 108 000e BF000000 		movl	$.LC0, %edi	#,
 108      00
 109 0013 89C6     		movl	%eax, %esi	# _3,
 110 0015 31C0     		xorl	%eax, %eax	#
 111 0017 E8000000 		call	printf	#
 111      00
 112              	.LVL1:
  61:main.cpp      ****     printf("check 5 : %d\n", check(5));
 113              		.loc 1 61 5 is_stmt 1 view .LVU4
 114              	# main.cpp:61:     printf("check 5 : %d\n", check(5));
 115              		.loc 1 61 11 is_stmt 0 view .LVU5
 116 001c BF050000 		movl	$5, %edi	#,
 116      00
 117 0021 E8000000 		call	check	#
 117      00
 118              	.LVL2:
 119 0026 BF000000 		movl	$.LC1, %edi	#,
 119      00
 120 002b 89C6     		movl	%eax, %esi	# _6,
 121 002d 31C0     		xorl	%eax, %eax	#
 122 002f E8000000 		call	printf	#
 122      00
 123              	.LVL3:
  62:main.cpp      ****     printf("check 0 : %d\n", check(0));
 124              		.loc 1 62 5 is_stmt 1 view .LVU6
 125              	# main.cpp:62:     printf("check 0 : %d\n", check(0));
 126              		.loc 1 62 11 is_stmt 0 view .LVU7
 127 0034 31FF     		xorl	%edi, %edi	#
 128 0036 E8000000 		call	check	#
 128      00
 129              	.LVL4:
 130 003b BF000000 		movl	$.LC2, %edi	#,
 130      00
 131 0040 89C6     		movl	%eax, %esi	# _9,
 132 0042 31C0     		xorl	%eax, %eax	#
 133 0044 E8000000 		call	printf	#
 133      00
 134              	.LVL5:
  63:main.cpp      ****     printf("check -1 : %d\n", check(-1));
 135              		.loc 1 63 5 is_stmt 1 view .LVU8
 136              	# main.cpp:63:     printf("check -1 : %d\n", check(-1));
 137              		.loc 1 63 11 is_stmt 0 view .LVU9
 138 0049 BFFFFFFF 		movl	$-1, %edi	#,
 138      FF
 139 004e E8000000 		call	check	#
 139      00
 140              	.LVL6:
 141 0053 BF000000 		movl	$.LC3, %edi	#,
 141      00
 142 0058 89C6     		movl	%eax, %esi	# _12,
 143 005a 31C0     		xorl	%eax, %eax	#
 144 005c E8000000 		call	printf	#
 144      00
 145              	.LVL7:
  64:main.cpp      ****     printf("fact 5 : %d\n", fact(5));
 146              		.loc 1 64 5 is_stmt 1 view .LVU10
 147              	# main.cpp:64:     printf("fact 5 : %d\n", fact(5));
 148              		.loc 1 64 11 is_stmt 0 view .LVU11
 149 0061 BF050000 		movl	$5, %edi	#,
 149      00
 150 0066 E8000000 		call	fact	#
 150      00
 151              	.LVL8:
 152 006b BF000000 		movl	$.LC4, %edi	#,
 152      00
 153 0070 89C6     		movl	%eax, %esi	# _15,
 154 0072 31C0     		xorl	%eax, %eax	#
 155 0074 E8000000 		call	printf	#
 155      00
 156              	.LVL9:
  65:main.cpp      ****     printf("fact 10 : %d\n", fact(10));
 157              		.loc 1 65 5 is_stmt 1 view .LVU12
 158              	# main.cpp:65:     printf("fact 10 : %d\n", fact(10));
 159              		.loc 1 65 11 is_stmt 0 view .LVU13
 160 0079 BF0A0000 		movl	$10, %edi	#,
 160      00
 161 007e E8000000 		call	fact	#
 161      00
 162              	.LVL10:
 163 0083 BF000000 		movl	$.LC5, %edi	#,
 163      00
 164 0088 89C6     		movl	%eax, %esi	# _18,
 165 008a 31C0     		xorl	%eax, %eax	#
 166 008c E8000000 		call	printf	#
 166      00
 167              	.LVL11:
  66:main.cpp      ****     printf("ones 5 : %d\n", ones(5));
 168              		.loc 1 66 5 is_stmt 1 view .LVU14
 169              	# main.cpp:66:     printf("ones 5 : %d\n", ones(5));
 170              		.loc 1 66 11 is_stmt 0 view .LVU15
 171 0091 BF050000 		movl	$5, %edi	#,
 171      00
 172 0096 E8000000 		call	ones	#
 172      00
 173              	.LVL12:
 174 009b BF000000 		movl	$.LC6, %edi	#,
 174      00
 175 00a0 89C6     		movl	%eax, %esi	# _21,
 176 00a2 31C0     		xorl	%eax, %eax	#
 177 00a4 E8000000 		call	printf	#
 177      00
 178              	.LVL13:
  67:main.cpp      ****     printf("ones -1 : %d\n", ones(-1));
 179              		.loc 1 67 5 is_stmt 1 view .LVU16
 180              	# main.cpp:67:     printf("ones -1 : %d\n", ones(-1));
 181              		.loc 1 67 11 is_stmt 0 view .LVU17
 182 00a9 BFFFFFFF 		movl	$-1, %edi	#,
 182      FF
 183 00ae E8000000 		call	ones	#
 183      00
 184              	.LVL14:
 185 00b3 BF000000 		movl	$.LC7, %edi	#,
 185      00
 186 00b8 89C6     		movl	%eax, %esi	# _24,
 187 00ba 31C0     		xorl	%eax, %eax	#
 188 00bc E8000000 		call	printf	#
 188      00
 189              	.LVL15:
  68:main.cpp      ****     printf("ones 8 : %d\n", ones(8));
 190              		.loc 1 68 5 is_stmt 1 view .LVU18
 191              	# main.cpp:68:     printf("ones 8 : %d\n", ones(8));
 192              		.loc 1 68 11 is_stmt 0 view .LVU19
 193 00c1 BF080000 		movl	$8, %edi	#,
 193      00
 194 00c6 E8000000 		call	ones	#
 194      00
 195              	.LVL16:
 196 00cb BF000000 		movl	$.LC8, %edi	#,
 196      00
 197 00d0 89C6     		movl	%eax, %esi	# _27,
 198 00d2 31C0     		xorl	%eax, %eax	#
 199 00d4 E8000000 		call	printf	#
 199      00
 200              	.LVL17:
  69:main.cpp      ****     printf("ones 12 : %d\n", ones(12));
 201              		.loc 1 69 5 is_stmt 1 view .LVU20
 202              	# main.cpp:69:     printf("ones 12 : %d\n", ones(12));
 203              		.loc 1 69 11 is_stmt 0 view .LVU21
 204 00d9 BF0C0000 		movl	$12, %edi	#,
 204      00
 205 00de E8000000 		call	ones	#
 205      00
 206              	.LVL18:
 207 00e3 BF000000 		movl	$.LC9, %edi	#,
 207      00
 208 00e8 89C6     		movl	%eax, %esi	# _30,
 209 00ea 31C0     		xorl	%eax, %eax	#
 210 00ec E8000000 		call	printf	#
 210      00
 211              	.LVL19:
  70:main.cpp      ****     printf("ones 14 : %d\n", ones(14));
 212              		.loc 1 70 5 is_stmt 1 view .LVU22
 213              	# main.cpp:70:     printf("ones 14 : %d\n", ones(14));
 214              		.loc 1 70 11 is_stmt 0 view .LVU23
 215 00f1 BF0E0000 		movl	$14, %edi	#,
 215      00
 216 00f6 E8000000 		call	ones	#
 216      00
 217              	.LVL20:
 218 00fb BF000000 		movl	$.LC10, %edi	#,
 218      00
 219 0100 89C6     		movl	%eax, %esi	# _33,
 220 0102 31C0     		xorl	%eax, %eax	#
 221 0104 E8000000 		call	printf	#
 221      00
 222              	.LVL21:
  71:main.cpp      ****     printf("ones 15 : %d\n", ones(15));
 223              		.loc 1 71 5 is_stmt 1 view .LVU24
 224              	# main.cpp:71:     printf("ones 15 : %d\n", ones(15));
 225              		.loc 1 71 11 is_stmt 0 view .LVU25
 226 0109 BF0F0000 		movl	$15, %edi	#,
 226      00
 227 010e E8000000 		call	ones	#
 227      00
 228              	.LVL22:
 229 0113 BF000000 		movl	$.LC11, %edi	#,
 229      00
 230 0118 89C6     		movl	%eax, %esi	# _36,
 231 011a 31C0     		xorl	%eax, %eax	#
 232 011c E8000000 		call	printf	#
 232      00
 233              	.LVL23:
  72:main.cpp      ****     printf("isOdd 1 : %d\n", isOdd(1));
 234              		.loc 1 72 5 is_stmt 1 view .LVU26
 235              	# main.cpp:72:     printf("isOdd 1 : %d\n", isOdd(1));
 236              		.loc 1 72 11 is_stmt 0 view .LVU27
 237 0121 BF010000 		movl	$1, %edi	#,
 237      00
 238 0126 E8000000 		call	isOdd	#
 238      00
 239              	.LVL24:
 240 012b BF000000 		movl	$.LC12, %edi	#,
 240      00
 241 0130 89C6     		movl	%eax, %esi	# _39,
 242 0132 31C0     		xorl	%eax, %eax	#
 243 0134 E8000000 		call	printf	#
 243      00
 244              	.LVL25:
  73:main.cpp      ****     printf("isOdd 2 : %d\n", isOdd(2));
 245              		.loc 1 73 5 is_stmt 1 view .LVU28
 246              	# main.cpp:73:     printf("isOdd 2 : %d\n", isOdd(2));
 247              		.loc 1 73 11 is_stmt 0 view .LVU29
 248 0139 BF020000 		movl	$2, %edi	#,
 248      00
 249 013e E8000000 		call	isOdd	#
 249      00
 250              	.LVL26:
 251 0143 BF000000 		movl	$.LC13, %edi	#,
 251      00
 252 0148 89C6     		movl	%eax, %esi	# _42,
 253 014a 31C0     		xorl	%eax, %eax	#
 254 014c E8000000 		call	printf	#
 254      00
 255              	.LVL27:
  74:main.cpp      ****     printf("isOdd 3 : %d\n", isOdd(3));
 256              		.loc 1 74 5 is_stmt 1 view .LVU30
 257              	# main.cpp:74:     printf("isOdd 3 : %d\n", isOdd(3));
 258              		.loc 1 74 11 is_stmt 0 view .LVU31
 259 0151 BF030000 		movl	$3, %edi	#,
 259      00
 260 0156 E8000000 		call	isOdd	#
 260      00
 261              	.LVL28:
 262 015b BF000000 		movl	$.LC14, %edi	#,
 262      00
 263 0160 89C6     		movl	%eax, %esi	# _45,
 264 0162 31C0     		xorl	%eax, %eax	#
 265 0164 E8000000 		call	printf	#
 265      00
 266              	.LVL29:
 267              	# main.cpp:75: }
  75:main.cpp      **** }...
 268              		.loc 1 75 1 view .LVU32
 269 0169 31C0     		xorl	%eax, %eax	#
 270 016b 4883C408 		addq	$8, %rsp	#,
 271              		.cfi_def_cfa_offset 8
 272 016f C3       		ret	
 273              		.cfi_endproc
 274              	.LFE1700:
 276              		.p2align 4,,15
 278              	_GLOBAL__sub_I_main:
 279              	.LFB2181:
 280              		.loc 1 75 1 is_stmt 1 view -0
 281              		.cfi_startproc
 282              	.LVL30:
 283              	.LBB4:
 284              	.LBI4:
 285              		.loc 1 75 1 view .LVU34
 286              	.LBE4:
 287 0170 4883EC08 		subq	$8, %rsp	#,
 288              		.cfi_def_cfa_offset 16
 289              	.LBB7:
 290              	.LBB5:
 291              	# /usr/include/c++/8/iostream:74:   static ios_base::Init __ioinit;
 292              		.file 2 "/usr/include/c++/8/iostream"
   1:/usr/include/c++/8/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/c++/8/iostream **** 
   3:/usr/include/c++/8/iostream **** // Copyright (C) 1997-2018 Free Software Foundation, Inc.
   4:/usr/include/c++/8/iostream **** //
   5:/usr/include/c++/8/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/8/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/8/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/8/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/8/iostream **** // any later version.
  10:/usr/include/c++/8/iostream **** 
  11:/usr/include/c++/8/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/8/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/8/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/8/iostream **** // GNU General Public License for more details.
  15:/usr/include/c++/8/iostream **** 
  16:/usr/include/c++/8/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/8/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/8/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/8/iostream **** 
  20:/usr/include/c++/8/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/8/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/8/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/8/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/8/iostream **** 
  25:/usr/include/c++/8/iostream **** /** @file include/iostream
  26:/usr/include/c++/8/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/8/iostream ****  */
  28:/usr/include/c++/8/iostream **** 
  29:/usr/include/c++/8/iostream **** //
  30:/usr/include/c++/8/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:/usr/include/c++/8/iostream **** //
  32:/usr/include/c++/8/iostream **** 
  33:/usr/include/c++/8/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/c++/8/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/c++/8/iostream **** 
  36:/usr/include/c++/8/iostream **** #pragma GCC system_header
  37:/usr/include/c++/8/iostream **** 
  38:/usr/include/c++/8/iostream **** #include <bits/c++config.h>
  39:/usr/include/c++/8/iostream **** #include <ostream>
  40:/usr/include/c++/8/iostream **** #include <istream>
  41:/usr/include/c++/8/iostream **** 
  42:/usr/include/c++/8/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/c++/8/iostream **** {
  44:/usr/include/c++/8/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/c++/8/iostream **** 
  46:/usr/include/c++/8/iostream ****   /**
  47:/usr/include/c++/8/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/c++/8/iostream ****    *
  49:/usr/include/c++/8/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/c++/8/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/c++/8/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/c++/8/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/c++/8/iostream ****    *
  54:/usr/include/c++/8/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/c++/8/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/c++/8/iostream ****    *  startup and termination. For more information, see the section of the
  57:/usr/include/c++/8/iostream ****    *  manual linked to above.
  58:/usr/include/c++/8/iostream ****   */
  59:/usr/include/c++/8/iostream ****   //@{
  60:/usr/include/c++/8/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/c++/8/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/c++/8/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/c++/8/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/c++/8/iostream **** 
  65:/usr/include/c++/8/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/c++/8/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/c++/8/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/c++/8/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/c++/8/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/c++/8/iostream **** #endif
  71:/usr/include/c++/8/iostream ****   //@}
  72:/usr/include/c++/8/iostream **** 
  73:/usr/include/c++/8/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/c++/8/iostream ****   static ios_base::Init __ioinit;
 293              		.loc 2 74 25 is_stmt 0 view .LVU35
 294 0174 BF000000 		movl	$_ZStL8__ioinit, %edi	#,
 294      00
 295 0179 E8000000 		call	_ZNSt8ios_base4InitC1Ev	#
 295      00
 296              	.LVL31:
 297 017e BA000000 		movl	$__dso_handle, %edx	#,
 297      00
 298 0183 BE000000 		movl	$_ZStL8__ioinit, %esi	#,
 298      00
 299 0188 BF000000 		movl	$_ZNSt8ios_base4InitD1Ev, %edi	#,
 299      00
 300              	.LBE5:
 301              	.LBE7:
 302              	# main.cpp:75: }
 303              		.loc 1 75 1 view .LVU36
 304 018d 4883C408 		addq	$8, %rsp	#,
 305              		.cfi_def_cfa_offset 8
 306              	.LBB8:
 307              	.LBB6:
 308              	# /usr/include/c++/8/iostream:74:   static ios_base::Init __ioinit;
 309              		.loc 2 74 25 view .LVU37
 310 0191 E9000000 		jmp	__cxa_atexit	#
 310      00
 311              	.LVL32:
 312              	.LBE6:
 313              	.LBE8:
 314              		.cfi_endproc
 315              	.LFE2181:
 317              		.section	.init_array,"aw"
 318              		.align 8
 319 0000 00000000 		.quad	_GLOBAL__sub_I_main
 319      00000000 
 320              		.local	_ZStL8__ioinit
 321              		.comm	_ZStL8__ioinit,1,1
 322              		.text
 323              	.Letext0:
 324              		.file 3 "/usr/include/c++/8/cwchar"
 325              		.file 4 "/usr/include/c++/8/new"
 326              		.file 5 "/usr/include/c++/8/bits/exception_ptr.h"
 327              		.file 6 "/usr/include/c++/8/type_traits"
 328              		.file 7 "/usr/include/c++/8/x86_64-redhat-linux/bits/c++config.h"
 329              		.file 8 "/usr/include/c++/8/bits/stl_pair.h"
 330              		.file 9 "/usr/include/c++/8/debug/debug.h"
 331              		.file 10 "/usr/include/c++/8/bits/char_traits.h"
 332              		.file 11 "/usr/include/c++/8/cstdint"
 333              		.file 12 "/usr/include/c++/8/clocale"
 334              		.file 13 "/usr/include/c++/8/cstdlib"
 335              		.file 14 "/usr/include/c++/8/cstdio"
 336              		.file 15 "/usr/include/c++/8/bits/basic_string.h"
 337              		.file 16 "/usr/include/c++/8/system_error"
 338              		.file 17 "/usr/include/c++/8/bits/ios_base.h"
 339              		.file 18 "/usr/include/c++/8/cwctype"
 340              		.file 19 "/usr/include/c++/8/iosfwd"
 341              		.file 20 "/usr/include/c++/8/bits/predefined_ops.h"
 342              		.file 21 "/usr/include/c++/8/ext/new_allocator.h"
 343              		.file 22 "/usr/include/c++/8/ext/numeric_traits.h"
 344              		.file 23 "/usr/lib/gcc/x86_64-redhat-linux/8/include/stddef.h"
 345              		.file 24 "<built-in>"
 346              		.file 25 "/usr/include/bits/types/wint_t.h"
 347              		.file 26 "/usr/include/bits/types/__mbstate_t.h"
 348              		.file 27 "/usr/include/bits/types/mbstate_t.h"
 349              		.file 28 "/usr/include/bits/types/__FILE.h"
 350              		.file 29 "/usr/include/bits/types/struct_FILE.h"
 351              		.file 30 "/usr/include/bits/types/FILE.h"
 352              		.file 31 "/usr/include/wchar.h"
 353              		.file 32 "/usr/include/bits/types/struct_tm.h"
 354              		.file 33 "/usr/include/bits/types.h"
 355              		.file 34 "/usr/include/bits/stdint-intn.h"
 356              		.file 35 "/usr/include/bits/stdint-uintn.h"
 357              		.file 36 "/usr/include/stdint.h"
 358              		.file 37 "/usr/include/locale.h"
 359              		.file 38 "/usr/include/time.h"
 360              		.file 39 "/usr/include/c++/8/x86_64-redhat-linux/bits/atomic_word.h"
 361              		.file 40 "/usr/include/stdlib.h"
 362              		.file 41 "/usr/include/bits/stdlib-float.h"
 363              		.file 42 "/usr/include/bits/stdlib-bsearch.h"
 364              		.file 43 "/usr/include/bits/types/__fpos_t.h"
 365              		.file 44 "/usr/include/stdio.h"
 366              		.file 45 "/usr/include/bits/sys_errlist.h"
 367              		.file 46 "/usr/include/bits/stdio.h"
 368              		.file 47 "/usr/include/errno.h"
 369              		.file 48 "/usr/include/bits/wctype-wchar.h"
 370              		.file 49 "/usr/include/wctype.h"
 371              		.file 50 "/usr/include/unistd.h"
 372              		.file 51 "/usr/include/bits/getopt_core.h"
