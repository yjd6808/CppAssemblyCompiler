   1              		.file	"main.cpp"
   2              		.intel_syntax noprefix
   3              		.text
   4              	.Ltext0:
   5              		.section	.rodata
   8              	_ZStL19piecewise_construct:
   9 0000 00       		.zero	1
  10              		.local	_ZStL8__ioinit
  11              		.comm	_ZStL8__ioinit,1,1
  12              		.globl	_of
  13              		.bss
  14              		.align 4
  17              	_of:
  18 0000 00000000 		.zero	4
  19              		.section	.rodata
  20              	.LC0:
  21 0001 6E656761 		.string	"negate(-1) = %d\n"
  21      7465282D 
  21      3129203D 
  21      2025640A 
  21      00
  22              	.LC1:
  23 0012 6F66203D 		.string	"of = %d\n"
  23      2025640A 
  23      00
  24              	.LC2:
  25 001b 6E656761 		.string	"negate(1) = %d\n"
  25      74652831 
  25      29203D20 
  25      25640A00 
  26              	.LC3:
  27 002b 6E656761 		.string	"negate(-128) = %d\n"
  27      7465282D 
  27      31323829 
  27      203D2025 
  27      640A00
  28              		.text
  29              		.globl	main
  31              	main:
  32              	.LFB1678:
  33              		.file 1 "main.cpp"
   1:main.cpp      **** #include <iostream>
   2:main.cpp      **** #include <stdint.h>
   3:main.cpp      **** #include <bitset>
   4:main.cpp      **** #include <unistd.h>
   5:main.cpp      **** 
   6:main.cpp      **** // 120p. 연습문제 - 22
   7:main.cpp      **** // 아래 negate(char c) 함수는 파리미터 c에 대한 2의 보수를 반환한다.
   8:main.cpp      **** // 결과로 변경되는 오버 플래그는 전역변수 of에 저장한다.
   9:main.cpp      **** 
  10:main.cpp      **** // int _of;
  11:main.cpp      **** // char negate(char c)
  12:main.cpp      **** // {
  13:main.cpp      **** //     // of = 2의 보수 연산 후 오버 플래그값 저장
  14:main.cpp      **** //     return -c;
  15:main.cpp      **** // }
  16:main.cpp      **** 
  17:main.cpp      **** extern char negate(char c) asm("negate");
  18:main.cpp      **** int _of;
  19:main.cpp      **** 
  20:main.cpp      **** int main()
  21:main.cpp      **** {
  34              		.loc 1 21 1
  35              		.cfi_startproc
  36 0000 55       		push	rbp
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 6, -16
  39 0001 4889E5   		mov	rbp, rsp
  40              		.cfi_def_cfa_register 6
  22:main.cpp      ****     printf("negate(-1) = %d\n", negate(-1));
  41              		.loc 1 22 39
  42 0004 BFFFFFFF 		mov	edi, -1
  42      FF
  43 0009 E8000000 		call	negate
  43      00
  44              		.loc 1 22 11
  45 000e 0FBEC0   		movsx	eax, al
  46 0011 89C6     		mov	esi, eax
  47 0013 BF000000 		mov	edi, OFFSET FLAT:.LC0
  47      00
  48 0018 B8000000 		mov	eax, 0
  48      00
  49 001d E8000000 		call	printf
  49      00
  23:main.cpp      ****     printf("of = %d\n", _of);
  50              		.loc 1 23 11
  51 0022 8B050000 		mov	eax, DWORD PTR _of[rip]
  51      0000
  52 0028 89C6     		mov	esi, eax
  53 002a BF000000 		mov	edi, OFFSET FLAT:.LC1
  53      00
  54 002f B8000000 		mov	eax, 0
  54      00
  55 0034 E8000000 		call	printf
  55      00
  24:main.cpp      **** 
  25:main.cpp      ****     printf("negate(1) = %d\n", negate(1));
  56              		.loc 1 25 38
  57 0039 BF010000 		mov	edi, 1
  57      00
  58 003e E8000000 		call	negate
  58      00
  59              		.loc 1 25 11
  60 0043 0FBEC0   		movsx	eax, al
  61 0046 89C6     		mov	esi, eax
  62 0048 BF000000 		mov	edi, OFFSET FLAT:.LC2
  62      00
  63 004d B8000000 		mov	eax, 0
  63      00
  64 0052 E8000000 		call	printf
  64      00
  26:main.cpp      ****     printf("of = %d\n", _of);
  65              		.loc 1 26 11
  66 0057 8B050000 		mov	eax, DWORD PTR _of[rip]
  66      0000
  67 005d 89C6     		mov	esi, eax
  68 005f BF000000 		mov	edi, OFFSET FLAT:.LC1
  68      00
  69 0064 B8000000 		mov	eax, 0
  69      00
  70 0069 E8000000 		call	printf
  70      00
  27:main.cpp      **** 
  28:main.cpp      ****     printf("negate(-128) = %d\n", negate(-128));
  71              		.loc 1 28 41
  72 006e BF80FFFF 		mov	edi, -128
  72      FF
  73 0073 E8000000 		call	negate
  73      00
  74              		.loc 1 28 11
  75 0078 0FBEC0   		movsx	eax, al
  76 007b 89C6     		mov	esi, eax
  77 007d BF000000 		mov	edi, OFFSET FLAT:.LC3
  77      00
  78 0082 B8000000 		mov	eax, 0
  78      00
  79 0087 E8000000 		call	printf
  79      00
  29:main.cpp      ****     printf("of = %d\n", _of);
  80              		.loc 1 29 11
  81 008c 8B050000 		mov	eax, DWORD PTR _of[rip]
  81      0000
  82 0092 89C6     		mov	esi, eax
  83 0094 BF000000 		mov	edi, OFFSET FLAT:.LC1
  83      00
  84 0099 B8000000 		mov	eax, 0
  84      00
  85 009e E8000000 		call	printf
  85      00
  30:main.cpp      **** }
  86              		.loc 1 30 1
  87 00a3 B8000000 		mov	eax, 0
  87      00
  88 00a8 5D       		pop	rbp
  89              		.cfi_def_cfa 7, 8
  90 00a9 C3       		ret
  91              		.cfi_endproc
  92              	.LFE1678:
  95              	_Z41__static_initialization_and_destruction_0ii:
  96              	.LFB2159:
  97              		.loc 1 30 1
  98              		.cfi_startproc
  99 00aa 55       		push	rbp
 100              		.cfi_def_cfa_offset 16
 101              		.cfi_offset 6, -16
 102 00ab 4889E5   		mov	rbp, rsp
 103              		.cfi_def_cfa_register 6
 104 00ae 4883EC10 		sub	rsp, 16
 105 00b2 897DFC   		mov	DWORD PTR [rbp-4], edi
 106 00b5 8975F8   		mov	DWORD PTR [rbp-8], esi
 107              		.loc 1 30 1
 108 00b8 837DFC01 		cmp	DWORD PTR [rbp-4], 1
 109 00bc 7527     		jne	.L5
 110              		.loc 1 30 1 is_stmt 0 discriminator 1
 111 00be 817DF8FF 		cmp	DWORD PTR [rbp-8], 65535
 111      FF0000
 112 00c5 751E     		jne	.L5
 113              		.file 2 "/usr/include/c++/8/iostream"
   1:/usr/include/c++/8/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/c++/8/iostream **** 
   3:/usr/include/c++/8/iostream **** // Copyright (C) 1997-2018 Free Software Foundation, Inc.
   4:/usr/include/c++/8/iostream **** //
   5:/usr/include/c++/8/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/8/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/8/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/8/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/8/iostream **** // any later version.
  10:/usr/include/c++/8/iostream **** 
  11:/usr/include/c++/8/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/8/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/8/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/8/iostream **** // GNU General Public License for more details.
  15:/usr/include/c++/8/iostream **** 
  16:/usr/include/c++/8/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/8/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/8/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/8/iostream **** 
  20:/usr/include/c++/8/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/8/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/8/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/8/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/8/iostream **** 
  25:/usr/include/c++/8/iostream **** /** @file include/iostream
  26:/usr/include/c++/8/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/8/iostream ****  */
  28:/usr/include/c++/8/iostream **** 
  29:/usr/include/c++/8/iostream **** //
  30:/usr/include/c++/8/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:/usr/include/c++/8/iostream **** //
  32:/usr/include/c++/8/iostream **** 
  33:/usr/include/c++/8/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/c++/8/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/c++/8/iostream **** 
  36:/usr/include/c++/8/iostream **** #pragma GCC system_header
  37:/usr/include/c++/8/iostream **** 
  38:/usr/include/c++/8/iostream **** #include <bits/c++config.h>
  39:/usr/include/c++/8/iostream **** #include <ostream>
  40:/usr/include/c++/8/iostream **** #include <istream>
  41:/usr/include/c++/8/iostream **** 
  42:/usr/include/c++/8/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/c++/8/iostream **** {
  44:/usr/include/c++/8/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/c++/8/iostream **** 
  46:/usr/include/c++/8/iostream ****   /**
  47:/usr/include/c++/8/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/c++/8/iostream ****    *
  49:/usr/include/c++/8/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/c++/8/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/c++/8/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/c++/8/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/c++/8/iostream ****    *
  54:/usr/include/c++/8/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/c++/8/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/c++/8/iostream ****    *  startup and termination. For more information, see the section of the
  57:/usr/include/c++/8/iostream ****    *  manual linked to above.
  58:/usr/include/c++/8/iostream ****   */
  59:/usr/include/c++/8/iostream ****   //@{
  60:/usr/include/c++/8/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/c++/8/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/c++/8/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/c++/8/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/c++/8/iostream **** 
  65:/usr/include/c++/8/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/c++/8/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/c++/8/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/c++/8/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/c++/8/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/c++/8/iostream **** #endif
  71:/usr/include/c++/8/iostream ****   //@}
  72:/usr/include/c++/8/iostream **** 
  73:/usr/include/c++/8/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/c++/8/iostream ****   static ios_base::Init __ioinit;
 114              		.loc 2 74 25 is_stmt 1
 115 00c7 BF000000 		mov	edi, OFFSET FLAT:_ZStL8__ioinit
 115      00
 116 00cc E8000000 		call	_ZNSt8ios_base4InitC1Ev
 116      00
 117 00d1 BA000000 		mov	edx, OFFSET FLAT:__dso_handle
 117      00
 118 00d6 BE000000 		mov	esi, OFFSET FLAT:_ZStL8__ioinit
 118      00
 119 00db BF000000 		mov	edi, OFFSET FLAT:_ZNSt8ios_base4InitD1Ev
 119      00
 120 00e0 E8000000 		call	__cxa_atexit
 120      00
 121              	.L5:
 122              		.loc 1 30 1
 123 00e5 90       		nop
 124 00e6 C9       		leave
 125              		.cfi_def_cfa 7, 8
 126 00e7 C3       		ret
 127              		.cfi_endproc
 128              	.LFE2159:
 131              	_GLOBAL__sub_I__of:
 132              	.LFB2160:
 133              		.loc 1 30 1
 134              		.cfi_startproc
 135 00e8 55       		push	rbp
 136              		.cfi_def_cfa_offset 16
 137              		.cfi_offset 6, -16
 138 00e9 4889E5   		mov	rbp, rsp
 139              		.cfi_def_cfa_register 6
 140              		.loc 1 30 1
 141 00ec BEFFFF00 		mov	esi, 65535
 141      00
 142 00f1 BF010000 		mov	edi, 1
 142      00
 143 00f6 E8AFFFFF 		call	_Z41__static_initialization_and_destruction_0ii
 143      FF
 144 00fb 5D       		pop	rbp
 145              		.cfi_def_cfa 7, 8
 146 00fc C3       		ret
 147              		.cfi_endproc
 148              	.LFE2160:
 150              		.section	.init_array,"aw"
 151              		.align 8
 152 0000 00000000 		.quad	_GLOBAL__sub_I__of
 152      00000000 
 153              		.text
 154              	.Letext0:
 155              		.file 3 "/usr/include/c++/8/cwchar"
 156              		.file 4 "/usr/include/c++/8/new"
 157              		.file 5 "/usr/include/c++/8/bits/exception_ptr.h"
 158              		.file 6 "/usr/include/c++/8/type_traits"
 159              		.file 7 "/usr/include/c++/8/x86_64-redhat-linux/bits/c++config.h"
 160              		.file 8 "/usr/include/c++/8/bits/cpp_type_traits.h"
 161              		.file 9 "/usr/include/c++/8/bits/stl_pair.h"
 162              		.file 10 "/usr/include/c++/8/debug/debug.h"
 163              		.file 11 "/usr/include/c++/8/bits/char_traits.h"
 164              		.file 12 "/usr/include/c++/8/cstdint"
 165              		.file 13 "/usr/include/c++/8/clocale"
 166              		.file 14 "/usr/include/c++/8/cstdlib"
 167              		.file 15 "/usr/include/c++/8/cstdio"
 168              		.file 16 "/usr/include/c++/8/bits/basic_string.h"
 169              		.file 17 "/usr/include/c++/8/system_error"
 170              		.file 18 "/usr/include/c++/8/bits/ios_base.h"
 171              		.file 19 "/usr/include/c++/8/cwctype"
 172              		.file 20 "/usr/include/c++/8/iosfwd"
 173              		.file 21 "/usr/include/c++/8/bits/predefined_ops.h"
 174              		.file 22 "/usr/include/c++/8/ext/new_allocator.h"
 175              		.file 23 "/usr/include/c++/8/ext/numeric_traits.h"
 176              		.file 24 "/usr/lib/gcc/x86_64-redhat-linux/8/include/stddef.h"
 177              		.file 25 "<built-in>"
 178              		.file 26 "/usr/include/bits/types/wint_t.h"
 179              		.file 27 "/usr/include/bits/types/__mbstate_t.h"
 180              		.file 28 "/usr/include/bits/types/mbstate_t.h"
 181              		.file 29 "/usr/include/bits/types/__FILE.h"
 182              		.file 30 "/usr/include/bits/types/struct_FILE.h"
 183              		.file 31 "/usr/include/bits/types/FILE.h"
 184              		.file 32 "/usr/include/wchar.h"
 185              		.file 33 "/usr/include/bits/types/struct_tm.h"
 186              		.file 34 "/usr/include/bits/types.h"
 187              		.file 35 "/usr/include/bits/stdint-intn.h"
 188              		.file 36 "/usr/include/bits/stdint-uintn.h"
 189              		.file 37 "/usr/include/stdint.h"
 190              		.file 38 "/usr/include/locale.h"
 191              		.file 39 "/usr/include/time.h"
 192              		.file 40 "/usr/include/c++/8/x86_64-redhat-linux/bits/atomic_word.h"
 193              		.file 41 "/usr/include/stdlib.h"
 194              		.file 42 "/usr/include/bits/types/__fpos_t.h"
 195              		.file 43 "/usr/include/stdio.h"
 196              		.file 44 "/usr/include/bits/sys_errlist.h"
 197              		.file 45 "/usr/include/errno.h"
 198              		.file 46 "/usr/include/bits/wctype-wchar.h"
 199              		.file 47 "/usr/include/wctype.h"
 200              		.file 48 "/usr/include/unistd.h"
 201              		.file 49 "/usr/include/bits/confname.h"
 202              		.file 50 "/usr/include/bits/getopt_core.h"
